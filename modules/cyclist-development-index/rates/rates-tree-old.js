const {    
    pavement_type_rate_pattern,
    pavement_condition_rate_pattern,
    painting_condition_rate_pattern,
    protection_conditions_rate_pattern,
    shading_rate_pattern, 
    segregator_type_rate_pattern,
    project_conception_rates_pattern,
    sinuosity_rates_pattern,
    horiontal_pattern_rates_pattern,
    } = require("./rates-evaluations-patterns")

const {
    calculate_average,
    calculate_no_evaluated,
    calculate_binnary_rate,
    calculate_inverted_binnary_rate,
    calculate_evaluation_pattern,
    calculate_interpolated_values,
    calculate_count_proportion,
} = require("./rates-functions")

function calculate_rates (parameters) {

const {
  typology,
  flow_direction,
  traffic_flow,
  localization,
  speed_limit,
  segregator_type,
  protection_conditions_evaluation,
  access_evaluation,
  all_access_count,
  way_with_access,
  ways_without_access,
  pavement_type,
  pavement_condition_evaluation,
  sinuosity_evaluation,
  shading_evaluation,
  all_risks_situations_count,
  unevenness_obstacles_count: unevenness_obstacles, //NO FUTURO, ajustar
  all_obstacles_count,
  ridable_width,
  buffer_width,
  road_width,
  parking,
  vertical_speed_signs_count,
  horizontal_speed_sign_count,
  electronic_speed_control_count,
  other_control_elements_count,
  start_indication,
  end_indication,
  on_way_vertical_signs_count,
  crosses_with_vertical_sign_count,
  crosses_without_vertical_sign_count,
  horizontal_pattern_evaluation,
  painting_condition_evaluation,
  good_conditions_crossing_signs,
  bad_conditions_crossing_signs,
  no_visible_crossing_signs,
  good_conditions_picto_signs,
  bad_conditions_picto_signs,
  good_conditions_arrow_signs,
  bad_conditions_arrow_signs,
  dedicated_ligthing,
  same_side_ligthing,
  other_side_ligthing,
  length,

  on_way_risks_situations_count,
  crossing_risks_situations_count,
  total_unlevel_controls,
  mean_lane_width,
  mean_square_size,

  cycle_stoplight_count = 0,
  total_stoplight_count = 0,
  additional_signs_count = 0,
} = { ...parameteres };

const rates_tree = [
    ["1", "average", "Nota geral", "Nota da avaliação do trecho da estrutura", 
    calculate_average, ["project", "safety", "maintenance_and_urbanity"]],
        ["1.1", "project", "Qualidade do projeto", "Nota sobre as características de implantação do projeto original", 
        calculate_average, ["protection", "vertical_signs", "horizontal_signs", "comfort"]],
            ["1.1.1", "protection", "Proteção contra a invasão", "Situação e tipo de proteção da estrutura contra a invasão de veículos motorizados.", 
            calculate_average, ["project_conception", "project_risks", "segregation"]],
                ["1.1.1.1", "project_conception", "Concepção do projeto", "Escolhas de localização, tipologia e direção da estrutura", 
                calculate_evaluation_pattern, [project_conception_rates_pattern, `${flow_direction.split(' ')[0]} > ${traffic_flow} > ${localization}`]],
                ["1.1.1.2", "project_risks", "Situações de riscos da estrutura", "Riscos de colisão com veículo motorizado que fatores estruturais colocam ciclistas.", 
                calculate_inverted_binnary_rate, [all_risks_situations_count]],
                ["1.1.1.3", "segregation", "Segregação", "Capacidade de manter veículos motorizados longe da estrutura e incapaz de invadi-la.", 
                calculate_average, [segregator_type, buffer_width]],
                    ["1.1.1.3.1", "segregation_type", "Tipo de segregador", "Qual foi o elemento físico escolhido para segregar a estrutura", 
                    calculate_evaluation_pattern, [segregator_type_rate_pattern, segregator_type]],
                    ["1.1.1.3.2", "buffer_size", "Faixa de amortecimento", "Largura da faixa que segrega a estrutura do fluxo motorizado.", 
                    calculate_interpolated_values, [1,buffer_width, [0.3, 1], typology.toLowerCase() != "ciclorrota"]],
            ["1.1.2", "vertical_signs", "Sinalização vertical", "Todas as sinalizações verticais previstas para a estrutura.", 
            calculate_average, ["on_way_vertical_signs", "start_vertical_signs", "end_vertical_signs", "cross_vertical_signs", "stoplight", "additional_signs"], ],
                ["1.1.2.1", "on_way_vertical_signs", "Sinalização vertical regulamentadora", "Quantidade de placas de sinalização horizontal regulamentadora R-34.", 
                calculate_interpolated_values, [1000 * length, 50 * on_way_vertical_signs_count, [150, 50]]],
                ["1.1.2.2",  "start_and_end_vertical_signs", "Sinalização de início e fim da estrutura.", "Presença ou ausência da sinalização de início e fim da estrutura, quando necessária.", 
                calculate_average, ["start_vertical_signs","end_vertical_signs"], ],
                ["1.1.2.2",  "start_vertical_signs", "Sinalização de início.", "Presença ou ausência da sinalização de início da estrutura, quando necessária.", 
                calculate_inverted_binnary_rate, [start_indication == "não"], start_indication == "continua de outra estrutura", ],
                ["1.1.2.3",  "end_vertical_signs", "Sinalização de fim.", "Presença ou ausência da sinalização de fim da estrutura, quando necessária.", 
                calculate_inverted_binnary_rate, [end_indication !== "não"], end_indication == "continua de outra estrutura"],
                ["1.1.2.4",  "cross_vertical_signs", "Sinalização vertical nas travessias", "Relação entre a presença de sinalização vertical nas travessias e o total de travessias.", 
                calculate_count_proportion, [crosses_with_vertical_sign_count, crosses_with_vertical_sign_count + crosses_without_vertical_sign_count]],
                ["1.1.2.5",  "stoplight", "Sinalização luminosa", "Semáforos exclusivos para ciclistas.", 
                calculate_no_evaluated, [cycle_stoplight_count, total_stoplight_count]], // calculate_count_proportion
                ["1.1.2.6",  "additional_signs", "Sinalização complementar", "Todas as sinalizações complementares e informativas.", 
                calculate_no_evaluated, [length, additional_signs_count]],
            ["1.1.3", "horizontal_signs", "Sinalização horizontal", "Presença e qualidade da sinalização da horizontal da estrutura.", 
            calculate_average, ["horizontal_pattern", "picto_signs", "arrow_signs", "cross_horizontal_signs"]],
                ["1.1.3.1", "horizontal_pattern", "Padrão de Sinalização Horizontal", "Padrão escolhido na pintura para a área de circulação da estrutura.", 
                calculate_evaluation_pattern, [horiontal_pattern_rates_pattern, horizontal_pattern_evaluation]],
                ["1.1.3.2", "picto_signs", "Pictogramas", "Quantidade de pictogramas por metro da estrutura.", 
                calculate_interpolated_values, [1000 * length, 30 * (good_conditions_picto_signs + bad_conditions_picto_signs), [90, 30]]],
                ["1.1.3.3", "arrow_signs", "Setas", "Quantidade de setas por metro da estrutura.", 
                calculate_interpolated_values, [1000 * length, 30 * (good_conditions_arrow_signs + bad_conditions_arrow_signs), [90, 30]]],
                ["1.1.3.4", "cross_horizontal_signs", "Sinalização horizontal nos cruzamentos", "Qualidade de manutenção e presença da sinalização horizontal nos cruzamentos.", 
                calculate_count_proportion, [good_conditions_crossing_signs + bad_conditions_crossing_signs, good_conditions_crossing_signs + bad_conditions_crossing_signs + no_visible_crossing_signs], ],
            ["1.1.4", "comfort", "Conforto da estrutura", "Condições de conforto ao pedalar na estrutura.", 
            calculate_average, ["access", "pavement", "sinuosity", "width_evaluation", "levels", "two_way"]],
                ["1.1.4.1",  "access", "Acesso da estrutura", "Facilidade de acessar e sair da estrutura cicloviária", 
                calculate_interpolated_values, [all_access_count, way_with_access + ways_without_access, access_evaluation == "Segregadores NÃO DIFICULTAM o acesso" ? [10, 10] : [0, 1], access_evaluation == "N/A"] ],
                ["1.1.4.2",  "pavement", "Tipo de pavimento", "Tipo do material usado no piso da estrutura", 
                calculate_evaluation_pattern, [pavement_type_rate_pattern, pavement_type]],
                ["1.1.4.3",  "sinuosity", "Sinuosidade", "Estrutura tem curvas desnecessárias no trajeto", 
                calculate_evaluation_pattern, [sinuosity_rates_pattern, sinuosity_evaluation]],
                ["1.1.4.4",  "width_evaluation", "Largura transitável", "Largura transitável da estrutura cicloviária", 
                calculate_interpolated_values, [1, ridable_width, flow_direction.startsWith("unidirecional") ? (ridable_width <= 1.5 ? [1.2, 1.5, 0, 8] : [1.5, 2.5, 8, 10]) : (ridable_width <= 2.5 ? [2.2, 2.5, 0, 8] : [2.5, 3.5, 8, 10]), typology.toLowerCase() != "ciclorrota"]],
                ["1.1.4.5",  "levels", "Desníveis", "Existência de desníveis na estrutura", 
                calculate_inverted_binnary_rate, [unevenness_obstacles !== 0],
                ["1.1.4.6",  "two_way", "Bidirecionalidade", "Fluxo da estrutura.", 
                calculate_binnary_rate, [flow_direction.startsWith("bidirecional")]], // !!
        ["1.2", "safety", "Segurança viária", "Segurança geral viária de se transitar na via e na estrutura.", 
        calculate_average, ["speed_control", "on_way_conflicts", "cross_conflicts"]],
            ["1.2.1", "speed_control", "Controle de velocidade", "Elementos de controle de velocidade presentes na via.", 
            calculate_average, ["electronic_control", "level_control", "unlevel_control"]],
                ["1.2.1.1", "electronic_control", "Controle eletrônico", "Presença de controle eletrônico de velocidade", 
                calculate_interpolated_values, [1000 * length, 500 * electronic_speed_control_count, [1000, 500], speed_limit > 30]],            
                ["1.2.1.2", "level_control", "Controle em nível", "Controles de velocidade no nível da via.", 
                calculate_average, ["square_size", "lane_width", "other_controls", "vertical_speed_sign", horizontal_speed_sign], ],
                    ["1.2.1.2.1",  "square_size", "Tamanho de quadra", "Tamanho médio da quadra", 
                    calculate_interpolated_values, [length, mean_square_size, [300,100]]],
                    ["1.2.1.2.2",  "lane_width", "Largura de faixa", "Largura média das faixas de rolamento", 
                    calculate_interpolated_values, [mean_lane_width, 1, [3.5, 2.5]]],
                    ["1.2.1.2.3",  "other_controls", "Outros controles de velocidade", "Outros elementos de controle de velocidade possíveis.", 
                    calculate_binnary_rate, [other_control_elements_count !== 0]],
                    ["1.2.1.2.4",  "vertical_speed_sign", "Placas de velocidade", "Quantidade de sinalização R-19  disponível na via.", 
                    calculate_interpolated_values, [length, vertical_speed_signs_count, [1, 0.1]]],
                    ["1.2.1.2.5",  "horizontal_speed_sign", "Velocidade pintada no chão", "Quantidade de sinalização pintada no chão da via.", 
                    calculate_interpolated_values, [length, horizontal_speed_sign_count, [1, 0.1]]],
                ["1.2.1.3",  "unlevel_control", "Controles em desnível", "Controles de velocidade em desnível.", 
                calculate_interpolated_values, [1000 * length, 200 * total_unlevel_controls, [600,200], speed_limit <= 30]],
            ["1.2.2", "on_way_conflicts", "Conflitos ao longo", "Condições de conflitos com veículos motorizados ao longo da estrutura.", 
            calculate_average, ["on_way_risks",  "cyclists_conflicts", "on_way_main_vertical_signs", "horizontal_sign_conditions", "segregation"], ],
                ["1.2.2.1", "on_way_risks", "Riscos ao longo da estrutura", "Condições de riscos ao longo da estrutura", 
                calculate_inverted_binnary_rate, [on_way_risks_situations_count]],
                ["1.2.2.2", "cyclists_conflicts", "Conflitos com ciclistas", "Como a estrutura pode ampliar as chances de colisão entre ciclistas", 
                calculate_average, ["width_evaluation", "two_way", "sinuosity"]],
                    // ["1.2.2.2.1", "width_evaluation"
                    // ["1.2.2.2.2", "two_way"
                    // ["1.2.2.2.3", "sinuosity"
                ["1.2.2.3", "on_way_main_vertical_signs", "Sinalização vertical", "Todas as sinalizações verticais previstas para a estrutura.", 
                calculate_average, ["on_way_vertical_signs", "stoplight"], ],
                    // ["1.2.2.3.1", "on_way_vertical_signs", "Sinalização vertical regulamentadora", "Quantidade de placas de sinalização horizontal regulamentadora R-34.", 
                    // ["1.2.2.3.2",  "stoplight", "Sinalização luminosa", "Semáforos exclusivos para ciclistas.", 
                // [1.2.2.4, "horizontal_sign_conditions"
                // [1.2.2.5, "segregation"
         ["1.2.3", "cross_conflicts", "Conflitos nos cruzamentos", "Condições de conflitos nos cruzamentos.", 
        calculate_average, ["cross_risks", "project_conception", "horizontal_cross_conditions", "cross_vertical_signs"], ],
            ["1.2.3.1", "cross_risks", "Riscos nos cruzamentos", "Situações de risco nos cruzamentos.", 
            calculate_inverted_binnary_rate, [crossing_risks_situations_count]],
                // [1.2.2.2, "cross_vertical_signs"
                // [1.2.2.3, "horizontal_cross_conditions"
                // [1.2.3.4, "project_conception"
    ["1.3", "maintenance_and_urbanity", "Manutenção e Urbanidade", "A manutenção da estrutura e as condições de urbanidade", 
    calculate_average, ["maintenance", "urbanity"]],
        ["1.3.1", "maintenance", "Manutenção", "Manutenção da estrutura", 
        calculate_average, ["pavement_condition", "horizontal_sign_conditions", "protection_conditions", "vertical_signs"], ],
            ["1.3.1.1",  "pavement_condition", "Situação do piso", "Qualidade de conservação do piso", 
            calculate_evaluation_pattern, [pavement_condition_rate_pattern, pavement_condition_evaluation]],
            ["1.3.1.2", "horizontal_sign_conditions", "Condição de conservação da sinalização horizontal.",  
            calculate_average, ["painting_condition", "picto_conditions", "arrow_conditions", "horizontal_cross_conditions"], ],
                ["1.3.1.2.1", "painting_condition", "Condição da pintura interna", "Condição de manutenção da sinalização horizontal interna da estrutura.", 
                calculate_evaluation_pattern, [painting_condition_rate_pattern, painting_condition_evaluation]],
                ["1.3.1.2.2",  "picto_conditions", "Condição dos pictogramas", "Condição de conservação dos pictogramas.", 
                calculate_interpolated_values, [1000 * length, 30 * (good_conditions_picto_signs, 0.5 * bad_conditions_picto_signs), [90,30]]],
                ["1.3.1.2.3",  "arrow_conditions", "Condição das setas", "Condição de conservação das setas de sinalização", 
                calculate_interpolated_values, [1000 * length, 30 * (good_conditions_arrow_signs, 0.5 * bad_conditions_arrow_signs), [90,30]]],
                ["1.3.1.2.4", "horizontal_cross_conditions", "Condição da sinalização horizontal no cruzamento", "Condição de conservação da sinalização dos cruzamentos.", 
                calculate_count_proportion, [good_conditions_crossing_signs + 0.5 * bad_conditions_crossing_signs, good_conditions_crossing_signs + bad_conditions_crossing_signs + no_visible_crossing_signs],],
            ["1.3.1.3", "protection_conditions", "Situação da proteção", "Facilidade de invasão de veículos motorizados à estrutura sem transpor elementos segregatórios.", 
            calculate_evaluation_pattern, [protection_conditions_rate_pattern, protection_conditions_evaluation]],
            // [1.3.1.4, "vertical_signs"
        ["1.3.2", "urbanity", "Urbanidade", "Questões urbanas gerais que interferem na estrutura cicloviária.", 
        calculate_average, [ "obstacles", "shading", "lighting", "access"]],
            ["1.3.2.1",  "obstacles", "Obstáculos", "Quantidade de obstáculos ao longo da estrutura", 
            calculate_interpolated_values, [length, all_obstacles_count, all_obstacles_count >= length ? [0,0] : [20, 0]]],
            ["1.3.2.2",  "shading", "Sombreamento", "Presença arbórea ao longo da estrutura", 
            calculate_evaluation_pattern, [shading_rate_pattern, shading_evaluation]],
            ["1.3.2.3",  "lighting", "Iluminação", "Qualidade da iluminação da via e da estrutura.", 
            calculate_interpolated_values, [length, dedicated_ligthing + (0.9 * (same_side_ligthing +  (road_width > 1.6 * 12 ? 1 : 0.7) * other_side_ligthing)) / (road_width <= 12 ? 1 : 2), [2823, 706]]],
            // ["1.3.2.4",  "access", 
    ]]
}
module.exports = calculate_rates;
